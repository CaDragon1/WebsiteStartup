{
  "version": 3,
  "sources": ["../../react-google-calendar-api/dist/ApiCalendar.js"],
  "sourcesContent": ["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/ApiCalendar.ts\nvar ApiCalendar_exports = {};\n__export(ApiCalendar_exports, {\n  default: () => ApiCalendar_default\n});\nmodule.exports = __toCommonJS(ApiCalendar_exports);\nvar scriptSrcGoogle = \"https://accounts.google.com/gsi/client\";\nvar scriptSrcGapi = \"https://apis.google.com/js/api.js\";\nvar ApiCalendar = class {\n  constructor(config) {\n    this.config = config;\n    this.tokenClient = null;\n    this.onLoadCallback = null;\n    this.calendar = \"primary\";\n    try {\n      this.initGapiClient = this.initGapiClient.bind(this);\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\n      this.handleAuthClick = this.handleAuthClick.bind(this);\n      this.createEvent = this.createEvent.bind(this);\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n      this.listEvents = this.listEvents.bind(this);\n      this.createEventFromNow = this.createEventFromNow.bind(this);\n      this.onLoad = this.onLoad.bind(this);\n      this.setCalendar = this.setCalendar.bind(this);\n      this.updateEvent = this.updateEvent.bind(this);\n      this.deleteEvent = this.deleteEvent.bind(this);\n      this.getEvent = this.getEvent.bind(this);\n      this.handleClientLoad();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  get sign() {\n    return !!this.tokenClient;\n  }\n  /**\n   * Auth to the google Api.\n   */\n  initGapiClient() {\n    gapi.client.init({\n      apiKey: this.config.apiKey,\n      discoveryDocs: this.config.discoveryDocs,\n      hosted_domain: this.config.hosted_domain\n    }).then(() => {\n      if (this.onLoadCallback) {\n        this.onLoadCallback();\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n  /**\n   * Init Google Api\n   * And create gapi in global\n   */\n  handleClientLoad() {\n    const scriptGoogle = document.createElement(\"script\");\n    const scriptGapi = document.createElement(\"script\");\n    scriptGoogle.src = scriptSrcGoogle;\n    scriptGoogle.async = true;\n    scriptGoogle.defer = true;\n    scriptGapi.src = scriptSrcGapi;\n    scriptGapi.async = true;\n    scriptGapi.defer = true;\n    document.body.appendChild(scriptGapi);\n    document.body.appendChild(scriptGoogle);\n    scriptGapi.onload = () => {\n      gapi.load(\"client\", this.initGapiClient);\n    };\n    scriptGoogle.onload = () => __async(this, null, function* () {\n      this.tokenClient = yield google.accounts.oauth2.initTokenClient({\n        client_id: this.config.clientId,\n        scope: this.config.scope,\n        prompt: \"\",\n        callback: () => {\n        }\n      });\n    });\n  }\n  /**\n   * Sign in Google user account\n   * @returns {Promise<void>} Promise resolved if authentication is successful, rejected if unsuccessful.\n   */\n  handleAuthClick() {\n    return __async(this, null, function* () {\n      if (gapi && this.tokenClient) {\n        return new Promise((resolve, reject) => {\n          this.tokenClient.callback = (resp) => {\n            if (resp.error) {\n              reject(resp);\n            } else {\n              resolve(resp);\n            }\n          };\n          this.tokenClient.error_callback = (resp) => {\n            reject(resp);\n          };\n          if (gapi.client.getToken() === null) {\n            this.tokenClient.requestAccessToken({ prompt: \"consent\" });\n          } else {\n            this.tokenClient.requestAccessToken({ prompt: \"\" });\n          }\n        });\n      } else {\n        console.error(\"Error: this.gapi not loaded\");\n        return Promise.reject(new Error(\"Error: this.gapi not loaded\"));\n      }\n    });\n  }\n  /**\n   * Set the default attribute calendar\n   * @param {string} newCalendar\n   */\n  setCalendar(newCalendar) {\n    this.calendar = newCalendar;\n  }\n  /**\n   * Execute the callback function when gapi is loaded\n   * @param callback\n   */\n  onLoad(callback) {\n    if (gapi) {\n      callback();\n    } else {\n      this.onLoadCallback = callback;\n    }\n  }\n  /**\n   * Sign out user google account\n   */\n  handleSignoutClick() {\n    if (gapi) {\n      const token = gapi.client.getToken();\n      if (token !== null) {\n        google.accounts.id.disableAutoSelect();\n        google.accounts.oauth2.revoke(token.access_token, () => {\n        });\n        gapi.client.setToken(null);\n      }\n    } else {\n      console.error(\"Error: this.gapi not loaded\");\n    }\n  }\n  /**\n   * List all events in the calendar\n   * @param {number} maxResults to see\n   * @param {string} calendarId to see by default use the calendar attribute\n   * @returns {any}\n   */\n  listUpcomingEvents(maxResults, calendarId = this.calendar) {\n    if (gapi) {\n      return gapi.client.calendar.events.list({\n        calendarId,\n        timeMin: (/* @__PURE__ */ new Date()).toISOString(),\n        showDeleted: false,\n        singleEvents: true,\n        maxResults,\n        orderBy: \"startTime\"\n      });\n    } else {\n      console.error(\"Error: this.gapi not loaded\");\n      return false;\n    }\n  }\n  /**\n   * List all events in the calendar queried by custom query options\n   * See all available options here https://developers.google.com/calendar/v3/reference/events/list\n   * @param {object} queryOptions to see\n   * @param {string} calendarId to see by default use the calendar attribute\n   * @returns {any}\n   */\n  listEvents(queryOptions, calendarId = this.calendar) {\n    if (gapi) {\n      return gapi.client.calendar.events.list(__spreadValues({\n        calendarId\n      }, queryOptions));\n    } else {\n      console.error(\"Error: gapi not loaded\");\n      return false;\n    }\n  }\n  /**\n   * Create an event from the current time for a certain period\n   * @param {number} time in minutes for the event\n   * @param {string} summary of the event\n   * @param {string} description of the event\n   * @param {string} calendarId\n   * @param {string} timeZone The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".)\n   * @returns {any}\n   */\n  createEventFromNow({ time, summary, description = \"\" }, calendarId = this.calendar, timeZone = \"Europe/Paris\") {\n    const event = {\n      summary,\n      description,\n      start: {\n        dateTime: (/* @__PURE__ */ new Date()).toISOString(),\n        timeZone\n      },\n      end: {\n        dateTime: new Date((/* @__PURE__ */ new Date()).getTime() + time * 6e4).toISOString(),\n        timeZone\n      }\n    };\n    return this.createEvent(event, calendarId);\n  }\n  /**\n   * Create Calendar event\n   * @param {string} calendarId for the event.\n   * @param {object} event with start and end dateTime\n   * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n   * @returns {any}\n   */\n  createEvent(event, calendarId = this.calendar, sendUpdates = \"none\") {\n    if (gapi.client.getToken()) {\n      return gapi.client.calendar.events.insert({\n        calendarId,\n        resource: event,\n        //@ts-ignore the @types/gapi.calendar package is not up to date(https://developers.google.com/calendar/api/v3/reference/events/insert)\n        sendUpdates,\n        conferenceDataVersion: 1\n      });\n    } else {\n      console.error(\"Error: this.gapi not loaded\");\n      return false;\n    }\n  }\n  /**\n   * Create Calendar event with video conference\n   * @param {string} calendarId for the event.\n   * @param {object} event with start and end dateTime\n   * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n   * @returns {any}\n   */\n  createEventWithVideoConference(event, calendarId = this.calendar, sendUpdates = \"none\") {\n    return this.createEvent(\n      __spreadProps(__spreadValues({}, event), {\n        conferenceData: {\n          createRequest: {\n            requestId: crypto.randomUUID(),\n            conferenceSolutionKey: {\n              type: \"hangoutsMeet\"\n            }\n          }\n        }\n      }),\n      calendarId,\n      sendUpdates\n    );\n  }\n  /**\n   * Delete an event in the calendar.\n   * @param {string} eventId of the event to delete.\n   * @param {string} calendarId where the event is.\n   * @returns {any} Promise resolved when the event is deleted.\n   */\n  deleteEvent(eventId, calendarId = this.calendar) {\n    if (gapi) {\n      return gapi.client.calendar.events.delete({\n        calendarId,\n        eventId\n      });\n    } else {\n      console.error(\"Error: gapi is not loaded use onLoad before please.\");\n      return null;\n    }\n  }\n  /**\n   * Update Calendar event\n   * @param {string} calendarId for the event.\n   * @param {string} eventId of the event.\n   * @param {object} event with details to update, e.g. summary\n   * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n   * @returns {any}\n   */\n  updateEvent(event, eventId, calendarId = this.calendar, sendUpdates = \"none\") {\n    if (gapi) {\n      return gapi.client.calendar.events.patch({\n        calendarId,\n        eventId,\n        resource: event,\n        sendUpdates\n      });\n    } else {\n      console.error(\"Error: gapi is not loaded use onLoad before please.\");\n      return null;\n    }\n  }\n  /**\n   * Get Calendar event\n   * @param {string} calendarId for the event.\n   * @param {string} eventId specifies individual event\n   * @returns {any}\n   */\n  getEvent(eventId, calendarId = this.calendar) {\n    if (gapi) {\n      return gapi.client.calendar.events.get({\n        calendarId,\n        eventId\n      });\n    } else {\n      console.error(\"Error: gapi is not loaded use onLoad before please.\");\n      return null;\n    }\n  }\n  /**\n   * Get Calendar List\n   * @returns {any}\n   */\n  listCalendars() {\n    if (gapi) {\n      return gapi.client.calendar.calendarList.list();\n    } else {\n      console.error(\"Error: gapi is not loaded use onLoad before please.\");\n      return null;\n    }\n  }\n  /**\n   * Create Calendar\n   * @param {string} summary, title of the calendar.\n   * @returns {any}\n   */\n  createCalendar(summary) {\n    if (gapi) {\n      return gapi.client.calendar.calendars.insert({ summary });\n    } else {\n      console.error(\"Error: gapi is not loaded use onLoad before please.\");\n      return null;\n    }\n  }\n};\nvar ApiCalendar_default = ApiCalendar;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {});\n"],
  "mappings": "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",
  "names": []
}
